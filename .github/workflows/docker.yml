name: Deploy to Cloud Run

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Autentikacija į GCP
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Docker login į Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      # Build & Push
      - name: Build and Push Docker image
        env:
          IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/crypto-signal/crypto-signals:latest
        run: |
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      # Deploy į Cloud Run (su env kintamaisiais ir baziniais resursais)
      - name: Deploy to Cloud Run
        env:
          SERVICE: crypto-signals   # pasirink vieną pavadinimą ir jo laikykis
          REGION: ${{ secrets.GCP_REGION }}
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          PUBLIC_URL: ${{ secrets.PUBLIC_URL }}                             # pvz. https://clicker.lt arba run.app URL
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_PRICE_ID: ${{ secrets.STRIPE_PRICE_ID }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_PRIVATE_CHAT_ID: ${{ secrets.TELEGRAM_PRIVATE_CHAT_ID }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}                         # Neon: ...?sslmode=require
        run: |
          BUILD_TIME="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          gcloud run deploy "$SERVICE" \
            --project "$PROJECT_ID" \
            --region "$REGION" \
            --platform managed \
            --image "$IMAGE" \
            --allow-unauthenticated \
            --set-env-vars "PUBLIC_URL=$PUBLIC_URL" \
            --set-env-vars "STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY" \
            --set-env-vars "STRIPE_PRICE_ID=$STRIPE_PRICE_ID" \
            --set-env-vars "STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET" \
            --set-env-vars "TELEGRAM_BOT_TOKEN=$TELEGRAM_BOT_TOKEN" \
            --set-env-vars "TELEGRAM_PRIVATE_CHAT_ID=$TELEGRAM_PRIVATE_CHAT_ID" \
            --set-env-vars "DATABASE_URL=$DATABASE_URL" \
            --set-env-vars "GIT_SHA=$GITHUB_SHA" \
            --set-env-vars "BUILD_TIME=$BUILD_TIME" \
            --concurrency=80 \
            --cpu=1 --memory=512Mi \
            --min-instances=0 --max-instances=5

      # Parodyti paslaugos URL
      - name: Show Cloud Run URL
        env:
          SERVICE: crypto-signals
          REGION: ${{ secrets.GCP_REGION }}
        run: |
          URL=$(gcloud run services describe "$SERVICE" --region "$REGION" --format='value(status.url)')
          echo "Cloud Run URL: $URL"
